Arborescence :
    app/ : la configuration de l'application
    src/ : le code PHP et HTML spécifique à notre projet
    vendor/ : Code générale (code) de l'application et les entités (=membres.php, commandes.php, produits.php ...)
    web/ : répertoire web racine. Le point d'entrée de notre application (index.php, img/, /photo/ js/, css/ font/ ... => "asset")


---------------------------------------------------------------------------

Nature des différents fichiers : 

app/
    Config/
        parameters.php:
        Contient toutes les informations de connexion à la BDD... et autre paramètres...

    Config.php:
    Contient l'inclusion des params de connexion à la BDD, et les retourne dans une méthode getParametersConnect()


vendor/

    autoload.php :
    Permet d'inclure les bons fichiers lors d'un "new" (instanciation)
    Attention : seuls les controllers sont dans le dossier SRC, il faut donc préciser que si le namespace n'est pas 'Controller' alors les fichiers sont dans vendor.
    Autre subtilité : le controller général (Controller\Controller) est également dans vendor

    Entity/
        Produit.php, Membre.php, Commande.php
        Classes qui contiennent toutes les propriétés (private) de nos entités et getters et les setters. POPO (Plain Old PHP Object)

    Manager/

        PDOManager.php
        Cette classe représente la connexion à la BDD. Elle contient et nous retourne notre objet PDO grâce auquel nous pourrons effectuer des requêtes.
        Cette classe est un singleton (singlette). Cela signifie qu'il ne peut y avoir qu'un seul objet issu de cette classe.

        EntityRepository.php
        Un repository centralise tout ce qui touche à la BDD et la récupération des entités. Concrètement il ne doit pas y avoir de requêtes ailleurs que dans un repository.
        Si une entité a besoin de requêtes spécifiques (exemple :jointure), dans ce cas les requêtes seront codées directement dans le repository en question
    
    Repository/
        ProduitRepository.php
        Ce fichier contiendra toutes les fonctions liées à l'entité produit, demandera à EntityRepository de faire certaines requêtes. Et si l'entité a besoin de requêtes spécifiques, elles seront codées ici.
        
Web/
    index.php : 
    Clé d'entrée de notre application (SILEX : index.php / Symfony app.php)

